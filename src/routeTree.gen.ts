/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as AuthImport } from './routes/_auth'
import { Route as DashboardProjectsImport } from './routes/_dashboard/projects'
import { Route as DashboardProfileImport } from './routes/_dashboard/profile'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as DashboardProjectsIdImport } from './routes/_dashboard/projects/$id'

// Create Virtual Routes

const DashboardIndexLazyImport = createFileRoute('/_dashboard/')()
const DashboardSettingsLazyImport = createFileRoute('/_dashboard/settings')()
const DashboardProjectsIndexLazyImport = createFileRoute(
  '/_dashboard/projects/',
)()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexLazyRoute = DashboardIndexLazyImport.update({
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any).lazy(() =>
  import('./routes/_dashboard/index.lazy').then((d) => d.Route),
)

const DashboardSettingsLazyRoute = DashboardSettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any).lazy(() =>
  import('./routes/_dashboard/settings.lazy').then((d) => d.Route),
)

const DashboardProjectsRoute = DashboardProjectsImport.update({
  path: '/projects',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardProfileRoute = DashboardProfileImport.update({
  path: '/profile',
  getParentRoute: () => DashboardRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const DashboardProjectsIndexLazyRoute = DashboardProjectsIndexLazyImport.update(
  {
    path: '/',
    getParentRoute: () => DashboardProjectsRoute,
  } as any,
).lazy(() =>
  import('./routes/_dashboard/projects/index.lazy').then((d) => d.Route),
)

const DashboardProjectsIdRoute = DashboardProjectsIdImport.update({
  path: '/$id',
  getParentRoute: () => DashboardProjectsRoute,
} as any).lazy(() =>
  import('./routes/_dashboard/projects/$id.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/signup': {
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthImport
    }
    '/_dashboard/profile': {
      preLoaderRoute: typeof DashboardProfileImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/projects': {
      preLoaderRoute: typeof DashboardProjectsImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/settings': {
      preLoaderRoute: typeof DashboardSettingsLazyImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/': {
      preLoaderRoute: typeof DashboardIndexLazyImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/projects/$id': {
      preLoaderRoute: typeof DashboardProjectsIdImport
      parentRoute: typeof DashboardProjectsImport
    }
    '/_dashboard/projects/': {
      preLoaderRoute: typeof DashboardProjectsIndexLazyImport
      parentRoute: typeof DashboardProjectsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AuthRoute.addChildren([AuthLoginRoute, AuthSignupRoute]),
  DashboardRoute.addChildren([
    DashboardProfileRoute,
    DashboardProjectsRoute.addChildren([
      DashboardProjectsIdRoute,
      DashboardProjectsIndexLazyRoute,
    ]),
    DashboardSettingsLazyRoute,
    DashboardIndexLazyRoute,
  ]),
])

/* prettier-ignore-end */
